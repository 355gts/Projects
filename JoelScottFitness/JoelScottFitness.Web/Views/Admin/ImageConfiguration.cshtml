@model JoelScottFitness.Common.Models.ImageConfigurationViewModel

@* Leave this style here so it just applies to this carousel *@
<style>
    .carousel-indicators li {
        visibility: hidden;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-xs-12 title-format">
            IMAGES
        </div>
        <div style="clear:both"></div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Images should be 1000-1100px wide with height maintained aspect ratio and a maximum of 500kb in size.</label>
            <table class="table">
                @using (Html.BeginForm("UploadImage", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <tr>
                        <td colspan="2">
                            <input type="file" id="postedFile" name="postedFile" />
                        </td>
                        <td>
                            <input type="submit" value="Upload" class="btn btn-default" style="float:right" />
                        </td>
                    </tr>
                    <tr>
                        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                        {
                            <td colspan="3">
                                <label id="validation-summary" class="text-danger form-validation-summary" style="font-size:10pt">@ViewBag.ErrorMessage</label>
                            </td>
                        }
                    </tr>
                }

                @using (Html.BeginForm("ImageConfiguration", "Admin", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <tr>
                        <td colspan="3">
                            <label>Configure Images</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Splash Image Id</label>
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.SplashImageId, new { htmlAttributes = new { @class = "form-control", @style = "min-width:100%" } })
                            @Html.ValidationMessageFor(model => model.SplashImageId, "", new { @class = "text-danger" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label>Section Image 1</label>
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.SectionImage1Id, new { htmlAttributes = new { @class = "form-control", @style = "min-width:100%" } })
                            @Html.ValidationMessageFor(model => model.SectionImage1Id, "", new { @class = "text-danger" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label>Section Image 2:</label>
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.SectionImage2Id, new { htmlAttributes = new { @class = "form-control", @style = "min-width:100%" } })
                            @Html.ValidationMessageFor(model => model.SectionImage2Id, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Section Image 3:</label>
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.SectionImage3Id, new { htmlAttributes = new { @class = "form-control", @style = "min-width:100%" } })
                            @Html.ValidationMessageFor(model => model.SectionImage3Id, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Randomize:</label>
                        </td>
                        <td colspan="2">
                            @Html.CheckBoxFor(model => model.Randomize, new { htmlAttributes = new { @class = "form-control", @style = "min-width:100%" } })
                            @Html.ValidationMessageFor(model => model.Randomize, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="text-align:right">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </td>
                    </tr>
                }
                @using (Html.BeginForm("DeleteImage", "Admin", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <tr>
                        <td colspan="1" style="text-align:right">
                            <input type="submit" value="Delete" class="btn btn-default" />
                        <td colspan="2" style="text-align:left">
                            <input class="form-control text-box single-line" name="imageId" id="imageId" placeholder="Image Id" type="number" style="min-width:100%">
                        </td>
                    </tr>
                }

            </table>
        </div>
        <div class="col-md-6">

            @if (Model == null || Model.Images == null || !Model.Images.Any())
            {
                <div style="text-align:center">
                    <br />
                    <br />
                    <label>No Images Available</label>
                </div>
            }
            else
            {
                string listElements = null;
                string imageElements = null;
                HtmlString htmlListElements = null;
                HtmlString htmlImageElements = null;
                string itemActive = "active item-active";
                int imageCount = 0;

                foreach (var image in Model.Images)
                {
                    if (imageCount == 0)
                    {
                        listElements = "<li data-target='#myCarousel' data-slide-to='" + imageCount + "' class='active'></li>";
                    }
                    else
                    {
                        listElements = listElements + "<li data-target='#myCarousel' data-slide-to='" + imageCount + "'></li>";
                        itemActive = null;
                    }

                    imageElements = imageElements + "<div class='item " + itemActive + "'>" +
                                                        "<div style=\"background-image: url('" + image.ImagePath + "');\" class='image-config-carousel-item'>" +
                                                            "<h3>Image Id: " + image.Id + "</h3>" +
                                                        "</div>" +
                                                    "</div>";

                    imageCount++;
                }

                htmlListElements = new HtmlString(listElements);
                htmlImageElements = new HtmlString(imageElements);

                <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false" style="width:100%;height:400px;overflow:hidden">
                    <!-- Indicators -->
                    <ol id="carousel-indicators" class="carousel-indicators">
                        @htmlListElements
                    </ol>

                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        @htmlImageElements
                    </div>

                    <!-- Left and right controls -->
                    <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="right carousel-control" href="#myCarousel" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>

            }
        </div>
    </div>
    <div class="row" style="height:60px">
    </div>
</div>
