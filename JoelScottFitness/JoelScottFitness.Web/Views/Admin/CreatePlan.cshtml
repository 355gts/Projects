@model JoelScottFitness.Common.Models.CreatePlanViewModel

<div class="container">
    <div class="row">
        <div class="col-xs-12 title-format">
            PLAN
        </div>
        <div style="clear:both"></div>
    </div>
    <div class="row">

        @using (Html.BeginForm("CreatePlan", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BannerHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BannerHeader, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BannerHeader, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BannerColour, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.BannerColour, Model.BannerColours.Select(o => new SelectListItem() { Text = o.Key, Value = o.Value.ToString(), Selected = true }).ToList(), new { @style = "width:100%" })
                        @Html.ValidationMessageFor(model => model.BannerColour, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TargetGender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TargetGender, Model.GenderTypes.Select(o => new SelectListItem() { Text = o.Key, Value = o.Value.ToString(), Selected = true }).ToList(), new { @style = "width:100%" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Image</label>  
                    <div class="col-md-10">
                        <input type="file" name="postedFile" />
                    </div>
                </div>

                @if (@Model != null && @Model.Options != null)
                {
                    <input type="hidden" id="plan-option-count" name="plan-option-count" value="@Model.Options.Count()" class="plan-option-count" style="display:none" />
                }
                else
                {
                    <input type="hidden" id="plan-option-count" name="plan-option-count" value="0" class="plan-option-count" style="display:none" />
                }
                    <table class="table">
                        <tr>
                            <th>
                                Description
                            </th>
                            <th>
                                Duration (Weeks)
                            </th>
                            <th>
                                Price
                            </th>
                            <th></th>
                        </tr>

                        @{
                            if (Model != null && @Model.Options != null && @Model.Options.Any())
                            {
                                var itemCount = 0;
                                foreach (var item in Model.Options)
                                {
                                    <tr>
                                        @Html.Hidden("Options[" + @itemCount + "].ItemCategory", item.ItemCategory, new { @class = "basket-value", @id = "Options[" + @itemCount + "].ItemCategory" })

                                        <td>
                                            @Html.TextBox("Options[" + @itemCount + "].Description", item.Description, new { @id = "Options[" + @itemCount + "].Description" })
                                        </td>
                                        <td>
                                            @Html.TextBox("Options[" + @itemCount + "].Duration", item.Duration, new { @id = "Options[" + @itemCount + "].Duration" })
                                        </td>
                                        <td>
                                            @Html.TextBox("Options[" + @itemCount + "].Price", item.Price, new { @id = "Options[" + @itemCount + "].Price" })
                                        </td>
                                        <td></td>
                                    </tr>

                                    itemCount++;
                                }

                            }

                        }

                        <tfoot>

                            <tr>
                                <td>
                                    <input type="text" id="add-description" name="add-description" class="add-description" />
                                </td>
                                <td>
                                    <input type="text" id="add-duration" name="add-duration" class="add-duration" />
                                </td>
                                <td>
                                    <input type="text" id="add-price" name="add-price" class="add-price" />
                                </td>
                                <td>
                                    <input type="button" class="add-row" value="Add" onclick="addPlanOption(0)">
                                </td>
                            </tr>
                        </tfoot>

                    </table>
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.ActionLink("Back to List", "Plans", "Admin", new { @class = "btn btn-default" })
                            </div>
                            <div class="col-md-6">
                                <input type="submit" value="Create" class="btn btn-default" style="float:right" />
                            </div>
                        </div>
                    </div>
                </div>
        }

        </div>
    </div>
