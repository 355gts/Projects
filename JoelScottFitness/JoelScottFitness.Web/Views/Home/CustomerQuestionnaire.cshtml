@model JoelScottFitness.Common.Models.QuestionnaireViewModel

@{
    ViewBag.Title = "CustomerQuestionnaire";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container page-container">
    <div class="row">
        <div class="col-xs-12 title-format">
            CUSTOMER INSIGHT
        </div>
        <div style="clear:both"></div>
    </div>
@{
    if (ViewBag.Message != null)
    {
        <div style="text-align:center;padding-top:50px">
            @ViewBag.Message
        </div>
    }
    else
    {
            <div class="customer-form-wrapper">

            @using (Html.BeginForm("CustomerQuestionnaire", "Home", FormMethod.Post, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PurchaseId, new { @style = "display:none" })
                <hr />
                <div class="form-group row">
                    @Html.LabelFor(m => m.Age, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextBoxFor(m => m.Age, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Age" })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.Weight, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextBoxFor(m => m.Weight, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Weight (lbs)" })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.Height, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextBoxFor(m => m.Height, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Height (inches)" })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.IsMemberOfGym, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.DropDownListFor(p => Model.IsMemberOfGym, Model.BooleanTypes.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString(), Selected = true }).ToList(), new { @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.IsMemberOfGym, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.CurrentGym, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextBoxFor(m => m.CurrentGym, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Current Gym" })
                        @Html.ValidationMessageFor(model => model.CurrentGym, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.WorkoutTypeId, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.DropDownListFor(p => Model.WorkoutTypeId, Model.WorkoutTypes.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList(), new { @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.WorkoutTypeId, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.WorkoutDescription, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextAreaFor(m => m.WorkoutDescription, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Workout Description", @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.WorkoutDescription, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.DietTypeId, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.DropDownListFor(p => Model.DietTypeId, Model.DietTypes.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList(), new { @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.DietTypeId, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.DietDetails, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextAreaFor(m => m.DietDetails, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Diet Details", @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.DietDetails, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.TrainingGoals, new { @class = "customer-form-label col-xs-12 col-sm-4 col-form-label" })
                    <div class="col-xs-12 col-sm-8">
                        @Html.TextAreaFor(m => m.TrainingGoals, new { @type = "text", @class = "form-control form-control-warning customer-form-input", @placeholder = "Training Goals", @style = "min-width:100%" })
                        @Html.ValidationMessageFor(model => model.TrainingGoals, "", new { @class = "text-danger form-warning" })
                    </div>
                </div>
                <div class="form-group row active-button-row-wrapper">
                    <div class="active-button-wrapper">
                        <button type="submit" class="btn btn-primary active-button">Submit</button>
                    </div>
                </div>
                <div style="position:relative">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger form-validation-summary" })
                    </div>
                    }
                </div>
            }
    }
</div>