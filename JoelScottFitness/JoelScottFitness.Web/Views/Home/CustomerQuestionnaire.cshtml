@model JoelScottFitness.Common.Models.CreateQuestionnaireViewModel

@{
    ViewBag.Title = "CustomerQuestionnaire";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container page-container">
    <div class="row">
        <div class="col-xs-12 title-format">
            CUSTOMER INSIGHT
        </div>
        <div style="clear:both"></div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.PurchaseId, new { @style = "display:none" })
        <div class="form-horizontal">

            <div class="form-group">
                @Html.Label("Age", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Weight (lbs)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Height (inches)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Member of gym?", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsMemberOfGym)
                        @Html.ValidationMessageFor(model => model.IsMemberOfGym, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Current gym", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentGym, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentGym, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Workout type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(p => Model.WorkoutTypeId, Model.WorkoutTypes.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList(), new { @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.WorkoutTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Workout description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.WorkoutDescription, new { @class = "form-control textAreaSize", @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.WorkoutDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Diet Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(p => Model.DietTypeId, Model.DietTypes.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList(), new { @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.DietTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Diet details", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.DietDetails, new { @class = "form-control textAreaSize", @style = "width:100%" } )
                    @Html.ValidationMessageFor(model => model.DietDetails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Training goals", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.TrainingGoals, new { @class = "form-control textAreaSize", @style = "width:100%" })
                    @Html.ValidationMessageFor(model => model.TrainingGoals, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>