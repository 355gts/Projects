@model JoelScottFitness.Common.Models.ConfirmPurchaseViewModel
@using JoelScottFitness.Common.Models;

@{
    ViewBag.Title = "ConfirmPurchase";
}

<div class="container page-container">
    <div class="row">
        <div class="col-xs-12 title-format">
            CONFIRM PURCHASE
        </div>
        <div style="clear:both"></div>
    </div>
    <div id="no-items" class="row col-xs-12" style="margin:0px;display:none">
        <div class="more-link-wrapper" style="padding-top:120px;padding-bottom:120px">
            NO ITEMS IN BASKET
        </div>
    </div>

    <div style="clear:both"></div>
    <div class="row large-basket-summary basket-summary">
        <fieldset class="basket-summary-items">
            <legend class="basket-legend">Delivery Details</legend>
            <ul class="basket-list">
                <li>
                    <div class="col-sm-3 basket-list-label">Name:</div>
                    <div class="col-sm-6 basket-list-label">Address:</div>
                    <div class="col-sm-3 basket-list-label">Email:</div>

                    <div class="col-sm-3"><p>@Model.CustomerDetails.Firstname @Model.CustomerDetails.Surname</p></div>
                    <div class="col-sm-6">
                        <p>

                            @string.Join(", ", new string[] { @Model.CustomerDetails.BillingAddress.AddressLine1,
                        @Model.CustomerDetails.BillingAddress.AddressLine2,
                        @Model.CustomerDetails.BillingAddress.AddressLine3,
                        @Model.CustomerDetails.BillingAddress.City,
                        @Model.CustomerDetails.BillingAddress.PostCode,
                        @Model.CustomerDetails.BillingAddress.Country }.Where(c => !string.IsNullOrEmpty(c)))
                        </p>
                    </div>
                    <div class="col-sm-3"><p>@Model.CustomerDetails.EmailAddress</p></div>
                </li>
            </ul>
        </fieldset>
    </div>

    <div class="row small-basket-summary  basket-summary">
        <fieldset class="basket-summary-items">
            <legend class="basket-legend">Delivery Details</legend>
            <ul class="basket-list">
                <li class="basket-list-label">Name:</li>
                <li><p>@Model.CustomerDetails.Firstname @Model.CustomerDetails.Surname</p></li>
                <li class="basket-list-label">Address:</li>
                <li>
                    <p>
                        @string.Join(", ", new string[] { @Model.CustomerDetails.BillingAddress.AddressLine1,
                        @Model.CustomerDetails.BillingAddress.AddressLine2,
                        @Model.CustomerDetails.BillingAddress.AddressLine3,
                        @Model.CustomerDetails.BillingAddress.City,
                        @Model.CustomerDetails.BillingAddress.PostCode,
                        @Model.CustomerDetails.BillingAddress.Country }.Where(c => !string.IsNullOrEmpty(c)))
                    </p>
                </li>
                <li class="basket-list-label">Email:</li>
                <li><p>@Model.CustomerDetails.EmailAddress</p></li>
            </ul>
        </fieldset>
    </div>

    <div class="large-table">
        @using (Html.BeginForm("Checkout", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.CustomerDetails.Id, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddressId, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.UserId, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.CreatedDate, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.Firstname, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.Surname, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.EmailAddress, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Id, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine1, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine2, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine3, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.City, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Country, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.CountryCode, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.PostCode, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Region, new { @style = "display:none" })
            @Html.HiddenFor(model => model.DiscountCodeId, new { @style = "display:none", @class = "discount-code-id" })

            if (Model.DiscountCode != null)
            {
                <input type="hidden" class="discount" value="@Model.DiscountCode.PercentDiscount"/>
            }
            else
            {
                <input type="hidden" class="discount" value="0" />
            }

            <div id="basket-wrapper" class="basket-wrapper">
                <fieldset>
                    <legend class="basket-legend">Basket Items</legend>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col" style="text-align:left">Plan</th>
                                <th scope="col" style="text-align:left">Description</th>
                                <th scope="col" style="text-align:center">Quantity</th>
                                <th scope="col" style="text-align:center">Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var itemCount = 0;

                                foreach (var planOption in Model.BasketItems)
                                {
                                    <tr class="basket-item">
                                        @Html.Hidden("BasketItems[" + @itemCount + "].Duration", planOption.Duration, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Duration" })
                                        @Html.Hidden("BasketItems[" + @itemCount + "].Id", planOption.Id, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Id" })
                                        @Html.Hidden("BasketItems[" + @itemCount + "].ItemDiscontinued", planOption.ItemDiscontinued, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].ItemDiscontinued" })
                                        @Html.Hidden("BasketItems[" + @itemCount + "].ItemType", planOption.ItemType, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].ItemType" })
                                        @Html.Hidden("BasketItems[" + @itemCount + "].PlanId", planOption.PlanId, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].PlanId" })
                                        @Html.Hidden("BasketItems[" + @itemCount + "].Price", planOption.Price, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Price" })

                                        <td class="col-xs-4" scope="row">@Html.TextBox("BasketItems[" + @itemCount + "].Plan_Name", planOption.Plan.Name, new { @readonly = true, @class = "basket-value-new", @id = "BasketItems[" + @itemCount + "].Plan_Name" })</td>
                                        <td class="col-xs-5">@Html.TextBox("BasketItems[" + @itemCount + "].Description", planOption.Description, new { @readonly = true, @class = "basket-value-new", @id = "BasketItems[" + @itemCount + "].Decription" })</td>
                                        <td class="col-xs-1">@Html.TextBox("BasketItems[" + @itemCount + "].Quantity", planOption.Quantity, new { @readonly = true, @class = "basket-value-new basket-item-quantity", @id = "BasketItems[" + @itemCount + "].Quantity", @style = "text-align:center" })</td>
                                        <td class="col-xs-2"><div style="position:relative;"> <input class="basket-value-new basket-item-price" id="basket-item-price" name="Price" readonly="readonly" type="text" value="£@planOption.Price" style="text-align:center">
                                             <input type="hidden" class="basket-item-hidden-price" id="basket-item-hidden-price" value="@planOption.Price" /></div></td>
                                        
                                    </tr>
                                    itemCount++;
                                }
                            }
                        </tbody>
                        <tfoot>

                            @{
                                string applyStyle = string.Empty;
                                string removeStyle = string.Empty;
                                string discountDescription = string.Empty;

                                if (Session["DiscountCode"] != null)
                                {
                                    applyStyle = "basket-hide-element";
                                    var discountCode = (DiscountCodeViewModel)Session["DiscountCode"];
                                    discountDescription = string.Format("{0} - {1}% Discount!", discountCode.Code, discountCode.PercentDiscount.ToString());
                                }
                                else
                                {
                                    removeStyle = "basket-hide-element";
                                }
                                <tr class="remove-discount-code-wrapper @removeStyle">
                                    <td></td>
                                    <td></td>
                                    <td class="basket-discount-code-wrapper"><div class="basket-discount-code-button-wrapper-large" style="text-align:right"><button type="button" onclick="removeDiscountCode()">Remove</button></div></td>
                                    <td class="basket-discount-code-wrapper"><div style="position:relative"><input type="text" class="basket-value-new basket-discount-description" readonly="readonly" value="@discountDescription" style="text-align:center;padding-top:3px"/></div></td>
                                </tr>
                                <tr class="apply-discount-code-wrapper @applyStyle">
                                    <td></td>
                                    <td></td>
                                    <td class="basket-discount-code-wrapper"><div class="basket-discount-code-button-wrapper-large"><button type="button" onclick="applyDiscountCode('basket-discount-code-input-large')">Apply</button></div></td>
                                    <td class="basket-discount-code-wrapper"><div style="position:relative"><input type="text" placeholder="Discount Code" class="basket-discount-code-input-large basket-discount-input" style="text-align:center" /></div></td>
                                </tr>
                            }


                            <tr class="basket-total-row">
                                <td></td>
                                <td></td>
                                <td><div class="basket-total-large">Total:</div></td>
                                <td><input id="basket-total" class="basket-total basket-total-large-input" style="width:100%;border:none;text-align:center" value="£@Math.Round(Model.BasketItems.Sum(s => s.Price * s.Quantity),2)"/>
                                <input type="hidden" id="basket-total-hidden" value="@Math.Round(Model.BasketItems.Sum(s => s.Price * s.Quantity),2)"/></td>
                            </tr>
                        </tfoot>
                    </table>
                    <div class="form-group row active-button-row-wrapper">
                        <div class="active-button-wrapper">
                            <button type="submit" class="btn btn-primary active-button">Checkout Securely</button>
                        </div>
                    </div>
                </fieldset>
            </div>

                                }
    </div>

    <div class="small-table" style="position:relative">
        @using (Html.BeginForm("Checkout", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.CustomerDetails.Id, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddressId, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.UserId, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.CreatedDate, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.Firstname, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.Surname, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.EmailAddress, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Id, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine1, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine2, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.AddressLine3, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.City, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Country, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.CountryCode, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.PostCode, new { @style = "display:none" })
            @Html.HiddenFor(model => model.CustomerDetails.BillingAddress.Region, new { @style = "display:none" })
            @Html.HiddenFor(model => model.DiscountCodeId, new { @style = "display:none", @class = "discount-code-id" })

            if (Model.DiscountCode != null)
            {
                <input type="hidden" class="discount" value="@Model.DiscountCode.PercentDiscount" />
            }
            else
            {
                <input type="hidden" class="discount" value="0" />
            }

            <div id="basket-wrapper" class="basket-wrapper">
                <fieldset>
                    <legend class="basket-legend">Basket Items</legend>
                    <div class="basket-small-wrapper">

                        @{
                            var itemCount = 0;

                            foreach (var planOption in Model.BasketItems)
                            {
                                double calculatedPrice = 0;
                                if (Session["DiscountCode"] != null)
                                {
                                    var discountCode = (DiscountCodeViewModel)Session["DiscountCode"];
                                    calculatedPrice = Math.Round(planOption.Price - (planOption.Price / 100 * discountCode.PercentDiscount), 2);
                                }
                                else
                                {
                                    calculatedPrice = planOption.Price;
                                }

                                @Html.Hidden("BasketItems[" + @itemCount + "].Duration", planOption.Duration, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Duration" })
                                @Html.Hidden("BasketItems[" + @itemCount + "].Id", planOption.Id, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Id" })
                                @Html.Hidden("BasketItems[" + @itemCount + "].ItemDiscontinued", planOption.ItemDiscontinued, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].ItemDiscontinued" })
                                @Html.Hidden("BasketItems[" + @itemCount + "].ItemType", planOption.ItemType, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].ItemType" })
                                @Html.Hidden("BasketItems[" + @itemCount + "].PlanId", planOption.PlanId, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].PlanId" })
                                @Html.Hidden("BasketItems[" + @itemCount + "].Price", planOption.Price, new { @style = "display:none", @id = "BasketItems[" + @itemCount + "].Price" })
                                <table class="table table-striped basket-small basket-item">
                                    <tbody>
                                        <tr>
                                            <th colspan="2" scope="col" style="text-align:left">Plan</th>
                                        </tr>
                                        <tr>
                                            <td colspan="2" scope="row">@Html.TextBox("BasketItems[" + @itemCount + "].Plan_Name", planOption.Plan.Name, new { @readonly = true, @class = "basket-value-new", @id = "BasketItems[" + @itemCount + "].Plan_Name", @style = "text-align:center" })</td>
                                        </tr>
                                        <tr>
                                            <th colspan="2" scope="col" style="text-align:left">Description</th>
                                        </tr>
                                        <tr>
                                            <td colspan="2">@Html.TextBox("BasketItems[" + @itemCount + "].Description", planOption.Description, new { @readonly = true, @class = "basket-value-new", @id = "BasketItems[" + @itemCount + "].Decription", @style = "text-align:center" })</td>
                                        </tr>
                                        <tr>
                                            <th scope="col" style="text-align:left">Quantity</th>
                                            <td>@Html.TextBox("BasketItems[" + @itemCount + "].Quantity", planOption.Quantity, new { @readonly = true, @class = "basket-value-new basket-item-quantity", @id = "BasketItems[" + @itemCount + "].Quantity", @style = "text-align:right" })</td>
                                        </tr>
                                        <tr>
                                            <th scope="col" style="text-align:left">Price</th>
                                            <td><div style="position:relative;"> <input class="basket-value-new basket-item-price" id="basket-item-price" name="Price" readonly="readonly" type="text" value="£@planOption.Price" style="text-align:right">
                                                    <input type="hidden" class="basket-item-hidden-price" id="basket-item-hidden-price" value="@planOption.Price" />
                                                </div>
                                            </td>
                                        </tr>

                                    </tbody>
                                </table>
                                <div class="basket-small-spacer"></div>
                                itemCount++;
                            }
                        }
                        <table class="table">
                            <tbody>
                                    @{
                                        string applyStyle = string.Empty;
                                        string removeStyle = string.Empty;
                                        string discountDescription = string.Empty;

                                        if (Session["DiscountCode"] != null)
                                        {
                                            applyStyle = "basket-hide-element";
                                            var discountCode = (DiscountCodeViewModel)Session["DiscountCode"];
                                            discountDescription = string.Format("{0} - {1}% Discount!", discountCode.Code, discountCode.PercentDiscount.ToString());
                                        }
                                        else
                                        {
                                            removeStyle = "basket-hide-element";
                                        }
                                        <tr class="remove-discount-code-wrapper @removeStyle">
                                            <td class="basket-discount-code-wrapper"><div class="basket-discount-code-button-wrapper-small"><button type="button" onclick="removeDiscountCode()">Remove</button></div></td>
                                            <td class="basket-discount-code-wrapper"><div style="position:relative"><input type="text" class="basket-value-new basket-discount-description" readonly="readonly" value="@discountDescription" style="text-align:right;padding-top:3px" /></div></td>
                                        </tr>
                                        <tr class="apply-discount-code-wrapper @applyStyle">
                                            <td class="basket-discount-code-wrapper"><div class="basket-discount-code-button-wrapper-small"><button type="button" onclick="applyDiscountCode('basket-discount-code-input-small')">Apply</button></div></td>
                                            <td class="basket-discount-code-wrapper"><div style="position:relative"><input type="text" placeholder="Discount Code" class="basket-discount-code-input-small basket-discount-input" style="text-align:center" /></div></td>
                                        </tr>
                                    }
                                <tr class="basket-total-row">
                                    <td><div class="basket-total-small">Total:</div></td>
                                    <td colspan="2"><input id="basket-total" class="basket-total basket-total-small-input" style="width:100%;border:none;text-align:right" value="£@Math.Round(Model.BasketItems.Sum(s => s.Price * s.Quantity),2)"/>
                                        <input type="hidden" id="basket-total-hidden" value="@Math.Round(Model.BasketItems.Sum(s => s.Price * s.Quantity),2)" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="form-group row active-button-row-wrapper">
                            <div class="active-button-wrapper">
                                <button type="submit" class="btn btn-primary active-button">Checkout Securely</button>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>

                                        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        calculateBasketItemTotals();
    });
</script>